cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable media fractal dimension",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$radius_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar radio",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$texture_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar texture",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$perimeter_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar perimeter",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$area_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar area",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$smoothness_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar smoothness",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$compactness_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar compactness",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$concavity_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar concavity",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$concave.pints_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar concave points",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$concave.points_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar concave points",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$symmetry_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar symmetry",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$fractal_dimension_se ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Valor de la variable error estandar fractal_dimension",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$radio_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable radio ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$radius_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable radio ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$texture_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable texture ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$perimeter_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable perimeter ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$area_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable area ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$smoothness_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable smoothness ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$compactness_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable compactness ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$concavity_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable concavity ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$concave.points_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable concave points ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$symmetry_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable symmetry ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$fractal dimension_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable fractal dimension ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
bwplot(BD_std$fractal_dimension_worst ~ BD_std$diagnosis, data = BD_std,
strip = strip.custom(bg = 'red'),
cex = 1.0, layout = c(1, 1),
xlab = "Diagnosis", ylab = "Peor valor de la variable fractal dimension ",
par.settings = list(
box.rectangle = list(col = 3),
box.umbrella  = list(col = 2),
plot.symbol   = list(cex = 1.5, col = 1)),
scales = list(x = list(relation = "same"),
y = list(relation = "same")))
benignos_std<-subset(BD_std,BD_std$diagnosis == "B",select = c(radius_mean,texture_mean,perimeter_mean,area_mean,smoothness_mean,compactness_mean,concavity_mean,concave.points_mean,symmetry_mean,fractal_dimension_mean,radius_se,texture_se,perimeter_se,area_se,smoothness_se,compactness_se,concavity_se,concave.points_se,symmetry_se,fractal_dimension_se,radius_worst,texture_worst,perimeter_worst,area_worst,smoothness_worst,compactness_worst,concavity_worst,concave.points_worst,symmetry_worst,fractal_dimension_worst))
malignos_std<-subset(BD_std,BD_std$diagnosis == "M",select = c(radius_mean,texture_mean,perimeter_mean,area_mean,smoothness_mean,compactness_mean,concavity_mean,concave.points_mean,symmetry_mean,fractal_dimension_mean,radius_se,texture_se,perimeter_se,area_se,smoothness_se,compactness_se,concavity_se,concave.points_se,symmetry_se,fractal_dimension_se,radius_worst,texture_worst,perimeter_worst,area_worst,smoothness_worst,compactness_worst,concavity_worst,concave.points_worst,symmetry_worst,fractal_dimension_worst))
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TesT_F<-VAR.TEST_(benignos_std,malignos_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
View(benignos_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
write.csv(TEST_F)
write_file(TEST_F)
write_file(TEST_F,C:\Users\mario\Desktop\UOC\Tipologia_CicloVida_Datos\PRACTICA2)
write_file(TEST_F, C:\Users\mario\Desktop\UOC\Tipologia_CicloVida_Datos\PRACTICA2)
capture.output(TEST_F,file = "TEST_F.txt")
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
capture.output(TEST_F,file = "TEST_F.txt")
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/var-test.R')
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
capture.output(TEST_F,file = "TEST_F.txt")
TEST_F<-VAR.TEST_(benignos_std,malignos_std)
par((mfrow=c(2,5))
)
par(mfrow=c(2,5))
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
DENSITY_LINE(BD_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
View(CURVAS_DENSIDAD)
View(VAR.TEST_)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD<- function(x){
plot(density(x$radius_mean),col="blue")
line(density(x$radius_se),col="red")
line(density(x$radius_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$texture_mean),col="blue")
line(density(x$texture_se),col="red")
line(density(x$texture_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$perimete_mean),col="blue")
line(density(x$perimeter_se),col="red")
line(density(x$perimeter_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$area_mean),col="blue")
line(density(x$area_se),col="red")
line(density(x$area_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$smoothness_mean),col="blue")
line(density(x$smoothness_se),col="red")
line(density(x$smoothness_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$compactnessradius_mean),col="blue")
line(density(x$compactness_se),col="red")
line(density(x$compactness_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$concavity_mean),col="blue")
line(density(x$concavity_se),col="red")
line(density(x$concavity_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$symmetry_mean),col="blue")
line(density(x$symmetry_se),col="red")
line(density(x$symmetry_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$concave.points_mean),col="blue")
line(density(x$concave.points_se),col="red")
line(density(x$concave.points_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
plot(density(x$fractal_dimension_mean),col="blue")
line(density(x$fractal_dimension_se),col="red")
line(density(x$fractal_dimension_worst),col="green")
legend("topright", c("mean", "standar error", "worst"),
lty = 1, col = c("blue", "red", "green"))
}
CURVAS_DENSIDAD(BD_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD(BD_std)
help("line")
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
help("plot")
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(BD_std)
CURVAS_DENSIDAD(BD_std)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
CURVAS_DENSIDAD(BD_std)
par(mfrow=c(2,5))
CURVAS_DENSIDAD(malignos_std)
help(legend)
debugSource('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(malignos_std)
source('C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/DENSITY_LINE.R')
par(mfrow=c(2,5))
CURVAS_DENSIDAD(malignos_std)
CURVAS_DENSIDAD(benignos_std)
legend("topright", c("mean", "standar error", "worst"),
col = c("blue", "yellow", "green"))
CURVAS_DENSIDAD(benignos_std)
install.packages("moments")
library("moments", lib.loc="~/R/win-library/3.4")
normalidad_malignos<-apply(malignos_std,2,agostino.tes)
normalidad_malignos<-apply(malignos_std,2,agostino.test)
normalidad_benignos<-apply(benignos_std,2,agostino.test)
write.csv(normalidad_benignos)
capture.output(normalidad_benignos)
capture.output(normalidad_malignos)
ESTADISTICOS_BD<-apply(BD,2,summary)
paramNormF1 = function(df){
paramNorm = sapply(df, function(columna) if(is.numeric(columna)) range(columna) else c(NA,NA))
paramNorm[2,]=paramNorm[2,]-paramNorm[1,]
paramNorm[2,]=ifelse(paramNorm[2,]>0, paramNorm[2,], 1)
paramNorm
}
benignos_std_norm<-benignos_std
paramNormF1(benignos_std_norm)
benignos_std_norm<-paramNormF1(benignos_std_norm)
par(mfrow=c(2,5))
CURVAS_DENSIDAD(benignos_std_norm)
View(benignos_std_norm)
normaliza1 =  function(df, paramNorm){
as.data.frame(
Map(function(columna, pn1, pn2){
if(is.numeric(columna)) (columna-pn1)/pn2
else columna},
df,
paramNorm[1,],
paramNorm[2,]
)
)
}
paramNormF1(benignos_std)
paranorm_benignos<-paramNormF1(benignos_std)
benignos_std_norm<-normaliza1(benignos_std,paranorm_benignos)
View(benignos_std_norm)
par(mfrow=c(2,5))
CURVAS_DENSIDAD(benignos_std_norm)
paranorm_malignos<-paramNormF1(malignos_std)
malignos_std_norm<-normaliza1(malignos_std,paranorm_benignos)
write.csv(BD_std)
write.csv(BD_std,file = "BD_STD")
write.csv(benignos_std,file = "benignos_STD")
write.csv(benignos_std_norm,file = "benignos_STD_NORM")
write.csv(ESTADISTICOS_BD,file = "ESTADISTICO_BD")
write.csv(malignos_std,file = "malignos_STD")
write.csv(malignos_std_norm,file = "malignos_STD_NORM")
write.csv(outliers_mean,file = "outliers_mean")
write.csv(outliers_se,file = "outliers_se")
write.csv(outliers_worst,file = "outliers_worst")
save.image("C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/PR2.RData")
savehistory("C:/Users/mario/Desktop/UOC/Tipologia_CicloVida_Datos/PRACTICA2/PR2.Rhistory")
library("lattice", lib.loc="~/R/win-library/3.3")
library("outliers", lib.loc="~/R/win-library/3.3")
library("moments", lib.loc="~/R/win-library/3.3")
y = list(relation = "same")))
y = list(relation = "same")))}
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
y = list(relation = "same")))
source('E:/PRACTICA2/BOX_HOMOG.R')
source('E:/PRACTICA2/BOX_HOMOG.R')
par(mfrow=c(2,5))
BOX_COND(BD_std)
par(mfrow=c(2,5))
BOX_COND(BD_std)
source('E:/PRACTICA2/BOX_HOMOG.R')
par(mfrow=c(2,5))
BOX_COND(BD_std)
source('E:/PRACTICA2/BOX_HOMOG.R')
par(mfrow=c(2,5))
BOX_COND(BD_std)
save.image("E:/PRACTICA2/PR2.RData")
savehistory("E:/PRACTICA2/PR2.Rhistory")
legend("topright", c("mean", "standar error", "worst"),
col = c("blue", "yellow", "green"))
legend("topright", c("mean", "standar error", "worst"),
col = c("blue", "yellow", "green"))
legend("topright", c("mean", "standar error", "worst"),
col = c("blue", "yellow", "green"))
RESUMEN<-summary.data.frame(BD)
write.csv(RESUMRN,file="RESUMEN")
write.csv(RESUMEN,file="RESUMEN")
VARIANZAS<-apply(BD,3,var)
VARIANZAS<-apply(BD,2,var)
write.csv(VARIANZAS,file="VARIANZAS")
DESVIACION<-apply(BD,2,sd)
write.csv(DESVIACION,file="DESVIACION")
colores<-factor(BD_std$diagnosis)
View(buscar_outliers)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_std)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_std)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_std)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_std)
BD_STD<-BD_std
BD_STD$diagnosis<-NULL
par(mfrow=c(2,5))
dispersion(BD_STD)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_STD)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_STD)
source('E:/PRACTICA2/dispersion.R')
par(mfrow=c(2,5))
dispersion(BD_STD)
save.image("E:/PRACTICA2/PR2.RData")
savehistory("E:/PRACTICA2/PR2.Rhistory")
